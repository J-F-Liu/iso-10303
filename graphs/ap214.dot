digraph G {
 rankdir=LR;
  Date -> {CalendarDate};
  DefinedFunction -> {StringDefinedFunction, SqlMappableDefinedFunction, NumericDefinedFunction, BooleanDefinedFunction};
  NumericDefinedFunction -> {RealDefinedFunction, IntegerDefinedFunction};
  SimplePairRange -> {UniversalPairRange, SurfacePairRange, SphericalPairRange, ScrewPairRange, RevolutePairRange, RackAndPinionPairRange, PrismaticPairRange, PointOnSurfacePairRange, PointOnPlanarCurvePairRange, PlanarPairRange, PlanarCurvePairRange, GearPairRange, CylindricalPairRange};
  ItemDefinedTransformation -> {KinematicPair};
  KinematicPair -> {UniversalPair, UnconstrainedPair, SurfacePair, SphericalPair, ScrewPair, RevolutePair, RackAndPinionPair, PrismaticPair, PointOnSurfacePair, PointOnPlanarCurvePair, PlanarPair, PlanarCurvePair, GearPair, FullyConstrainedPair, CylindricalPair};
  UniversalPair -> {HomokineticPair};
  SurfacePair -> {SlidingSurfacePair, RollingSurfacePair};
  PlanarCurvePair -> {SlidingCurvePair, RollingCurvePair};
  ActionResource -> {ProductDefinitionResource};
  AttributeClassificationAssignment -> {AttributeLanguageAssignment};
  ItemIdentifiedRepresentationUsage -> {GeometricItemSpecificUsage, DraughtingModelItemAssociation};
  OrganizationAssignment -> {AppliedOrganizationAssignment};
  ProductDefinitionFormation -> {ProductDefinitionFormationWithSpecifiedSource};
  GeometricTolerance -> {SurfaceProfileTolerance, StraightnessTolerance, RoundnessTolerance, PositionTolerance, ModifiedGeometricTolerance, LineProfileTolerance, GeometricToleranceWithDefinedUnit, GeometricToleranceWithDatumReference, FlatnessTolerance, CylindricityTolerance};
  GeometricToleranceWithDatumReference -> {TotalRunoutTolerance, SymmetryTolerance, PerpendicularityTolerance, ParallelismTolerance, ConcentricityTolerance, CoaxialityTolerance, CircularRunoutTolerance, AngularityTolerance};
  ActionResourceRequirement -> {RequirementForActionResource};
  RepresentationContext -> {ParametricRepresentationContext, GlobalUnitAssignedContext, GlobalUncertaintyAssignedContext, GeometricRepresentationContext};
  ToleranceZoneDefinition -> {RunoutZoneDefinition, ProjectedZoneDefinition};
  GenericExpression -> {UnaryGenericExpression, SimpleGenericExpression, MultipleArityGenericExpression, Expression, BinaryGenericExpression};
  UnaryGenericExpression -> {ValueFunction, UnaryNumericExpression, UnaryBooleanExpression, LengthFunction};
  ValueFunction -> {IntValueFunction};
  UnaryNumericExpression -> {UnaryFunctionCall};
  UnaryFunctionCall -> {TanFunction, SquareRootFunction, SinFunction, MinusFunction, LogFunction, Log2Function, Log10Function, ExpFunction, CosFunction, AsinFunction, AcosFunction, AbsFunction};
  UnaryBooleanExpression -> {OddFunction, NotExpression};
  SimpleGenericExpression -> {SimpleStringExpression, SimpleNumericExpression, SimpleBooleanExpression, GenericVariable, GenericLiteral};
  SimpleStringExpression -> {StringVariable, StringLiteral};
  SimpleNumericExpression -> {NumericVariable, LiteralNumber};
  NumericVariable -> {RealNumericVariable, IntNumericVariable};
  LiteralNumber -> {RealLiteral, IntLiteral};
  SimpleBooleanExpression -> {BooleanVariable, BooleanLiteral};
  GenericVariable -> {Variable};
  Variable -> {StringVariable, NumericVariable, BooleanVariable};
  GenericLiteral -> {StringLiteral, LiteralNumber, BooleanLiteral};
  MultipleArityGenericExpression -> {SubstringExpression, MultipleArityNumericExpression, MultipleArityBooleanExpression, IntervalExpression, ConcatExpression};
  MultipleArityNumericExpression -> {PlusExpression, MultipleArityFunctionCall, MultExpression};
  MultipleArityFunctionCall -> {MinimumFunction, MaximumFunction};
  MultipleArityBooleanExpression -> {OrExpression, AndExpression};
  Expression -> {StringExpression, NumericExpression, BooleanExpression};
  StringExpression -> {SubstringExpression, StringDefinedFunction, SimpleStringExpression, IndexExpression, FormatFunction, ConcatExpression};
  NumericExpression -> {ValueFunction, UnaryNumericExpression, SimpleNumericExpression, NumericDefinedFunction, MultipleArityNumericExpression, LengthFunction, BinaryNumericExpression};
  BinaryNumericExpression -> {SlashExpression, PowerExpression, ModExpression, MinusExpression, DivExpression, BinaryFunctionCall};
  BinaryFunctionCall -> {AtanFunction};
  BooleanExpression -> {UnaryBooleanExpression, SimpleBooleanExpression, MultipleArityBooleanExpression, IntervalExpression, ComparisonExpression, BooleanDefinedFunction, BinaryBooleanExpression};
  ComparisonExpression -> {LikeExpression, ComparisonNotEqual, ComparisonLessEqual, ComparisonLess, ComparisonGreaterEqual, ComparisonGreater, ComparisonEqual};
  BinaryBooleanExpression -> {XorExpression, EqualsExpression};
  BinaryGenericExpression -> {IndexExpression, FormatFunction, ComparisonExpression, BinaryNumericExpression, BinaryBooleanExpression};
  Invisibility -> {ContextDependentInvisibility};
  ClassificationAssignment -> {LanguageAssignment, AppliedClassificationAssignment};
  EventOccurrenceAssignment -> {AppliedEventOccurrenceAssignment};
  NameAssignment -> {AppliedNameAssignment};
  RunoutZoneOrientation -> {RunoutZoneOrientationReferenceDirection};
  Colour -> {PreDefinedColour, ColourSpecification, BackgroundColour};
  PreDefinedColour -> {DraughtingPreDefinedColour};
  ColourSpecification -> {ColourRgb};
  ExternallyDefinedItem -> {ExternallyDefinedTileStyle, ExternallyDefinedTextFont, ExternallyDefinedSymbol, ExternallyDefinedStyle, ExternallyDefinedHatchStyle, ExternallyDefinedGeneralProperty, ExternallyDefinedFeatureDefinition, ExternallyDefinedDimensionDefinition, ExternallyDefinedCurveFont, ExternallyDefinedClass, ExternallyDefinedCharacterGlyph};
  IdentificationAssignment -> {ExternalIdentificationAssignment, AppliedIdentificationAssignment};
  ExternalIdentificationAssignment -> {AppliedExternalIdentificationAssignment};
  DocumentReference -> {DraughtingSpecificationReference, AppliedDocumentReference};
  OrganizationalProjectAssignment -> {AppliedOrganizationalProjectAssignment};
  FunctionallyDefinedTransformation -> {KinematicFrameBasedTransformation, CartesianTransformationOperator};
  CartesianTransformationOperator -> {CartesianTransformationOperator3d, CartesianTransformationOperator2d};
  Action -> {Retention, PropertyProcess, ProductDefinitionProcess, ProcessPlan, ExecutedAction, ElementDelivery};
  ProductDefinitionProcess -> {ProductProcessPlan};
  ExecutedAction -> {DirectedAction};
  ActionMethod -> {ProcessOperation};
  ActionAssignment -> {AppliedActionAssignment};
  DerivedUnit -> {VolumeUnit, DerivedUnitVariable, AreaUnit};
  ConceptFeatureRelationship -> {ConceptFeatureRelationshipWithCondition};
  PropertyDefinitionRepresentation -> {ShapeDefinitionRepresentation, MaterialPropertyRepresentation, KinematicPropertyRepresentationRelation};
  DateAndTimeAssignment -> {AppliedDateAndTimeAssignment};
  PresentationSet -> {DrawingRevision};
  PropertyDefinition -> {ProductDefinitionShape, MaterialProperty, KinematicPropertyDefinition};
  ProductDefinitionShape -> {FeaturedShape};
  ProductCategory -> {ProductRelatedProductCategory};
  ContractAssignment -> {AppliedContractAssignment};
  RepresentationItem -> {ValueRepresentationItem, TopologicalRepresentationItem, StyledItem, RepItemGroup, QualifiedRepresentationItem, MeasureRepresentationItem, MappedItem, KinematicPath, GeometricRepresentationItem, DescriptiveRepresentationItem, CompoundRepresentationItem};
  TopologicalRepresentationItem -> {Vertex, Path, Loop, FaceBound, Face, Edge, ConnectedFaceSet, ConnectedEdgeSet};
  Vertex -> {VertexPoint};
  Path -> {OrientedPath, EdgeLoop};
  Loop -> {VertexLoop, PolyLoop, EdgeLoop};
  FaceBound -> {FaceOuterBound};
  Face -> {Subface, OrientedFace, FaceSurface};
  FaceSurface -> {AdvancedFace};
  Edge -> {Subedge, OrientedEdge, EdgeCurve};
  OrientedEdge -> {SeamEdge};
  ConnectedFaceSet -> {OpenShell, ConnectedFaceSubSet, ClosedShell};
  OpenShell -> {OrientedOpenShell};
  ClosedShell -> {OrientedClosedShell};
  StyledItem -> {OverRidingStyledItem, AnnotationOccurrence};
  OverRidingStyledItem -> {ContextDependentOverRidingStyledItem};
  ContextDependentOverRidingStyledItem -> {HiddenElementOverRidingStyledItem};
  AnnotationOccurrence -> {DraughtingAnnotationOccurrence, AnnotationTextOccurrence, AnnotationSymbolOccurrence, AnnotationPlane, AnnotationFillAreaOccurrence, AnnotationCurveOccurrence};
  AnnotationSymbolOccurrence -> {TerminatorSymbol, AnnotationSubfigureOccurrence};
  TerminatorSymbol -> {LeaderTerminator, DimensionCurveTerminator};
  AnnotationCurveOccurrence -> {ProjectionCurve, LeaderCurve, DimensionCurve};
  MappedItem -> {DimensionTextAssociativity, CameraImage, AnnotationTextCharacter, AnnotationText, AnnotationSymbol};
  CameraImage -> {CameraImage3dWithScale, CameraImage2dWithScale};
  GeometricRepresentationItem -> {VertexPoint, Vector, Torus, TextLiteral, SymbolTarget, Surface, Sphere, SolidModel, ShellBasedSurfaceModel, RightCircularCylinder, RightCircularCone, RightAngularWedge, PolyLoop, Point, PlanarExtent, Placement, OneDirectionRepeatFactor, LightSource, KinematicFrameBasedTransformation, HalfSpaceSolid, GeometricSet, FillAreaStyleTiles, FillAreaStyleTileSymbolWithStyle, FillAreaStyleHatching, FaceSurface, FaceBasedSurfaceModel, ExternallyDefinedTileStyle, ExternallyDefinedHatchStyle, EdgeCurve, EdgeBasedWireframeModel, DraughtingCallout, Direction, DefinedSymbol, DefinedCharacterGlyph, Curve, CompositeText, CartesianTransformationOperator, CameraModel, BooleanResult, Block, AnnotationPlane, AnnotationFillArea};
  TextLiteral -> {TextLiteralWithExtent, TextLiteralWithDelineation, TextLiteralWithBlankingBox, TextLiteralWithAssociatedCurves, DimensionTextAssociativity};
  TextLiteralWithDelineation -> {DraughtingTextLiteralWithDelineation};
  Surface -> {SweptSurface, SurfaceReplica, OrientedSurface, OffsetSurface, ElementarySurface, BoundedSurface};
  SweptSurface -> {SurfaceOfRevolution, SurfaceOfLinearExtrusion};
  ElementarySurface -> {ToroidalSurface, SphericalSurface, Plane, CylindricalSurface, ConicalSurface};
  ToroidalSurface -> {DegenerateToroidalSurface};
  BoundedSurface -> {RectangularTrimmedSurface, RectangularCompositeSurface, CurveBoundedSurface, BSplineSurface};
  BSplineSurface -> {UniformSurface, RationalBSplineSurface, QuasiUniformSurface, BezierSurface, BSplineSurfaceWithKnots};
  SolidModel -> {SweptFaceSolid, SweptDiskSolid, SweptAreaSolid, SolidReplica, ManifoldSolidBrep, CsgSolid};
  SweptFaceSolid -> {RevolvedFaceSolid, ExtrudedFaceSolid};
  SweptAreaSolid -> {SurfaceCurveSweptAreaSolid, RevolvedAreaSolid, ExtrudedAreaSolid};
  SurfaceCurveSweptAreaSolid -> {RuledSurfaceSweptAreaSolid};
  ManifoldSolidBrep -> {FacetedBrep, BrepWithVoids};
  Point -> {PointReplica, PointOnSurface, PointOnCurve, DegeneratePcurve, CartesianPoint};
  DegeneratePcurve -> {EvaluatedDegeneratePcurve};
  PlanarExtent -> {PlanarBox};
  Placement -> {Axis2Placement3d, Axis2Placement2d, Axis1Placement};
  OneDirectionRepeatFactor -> {TwoDirectionRepeatFactor};
  LightSource -> {LightSourceSpot, LightSourcePositional, LightSourceDirectional, LightSourceAmbient};
  HalfSpaceSolid -> {BoxedHalfSpace};
  GeometricSet -> {GeometricCurveSet};
  DraughtingCallout -> {SurfaceConditionCallout, StructuredDimensionCallout, ProjectionDirectedCallout, LeaderDirectedCallout, GeometricalToleranceCallout, DraughtingElements, DimensionCurveDirectedCallout, DimensionCallout, DatumTargetCallout, DatumFeatureCallout};
  ProjectionDirectedCallout -> {OrdinateDimension};
  LeaderDirectedCallout -> {LeaderDirectedDimension};
  DimensionCurveDirectedCallout -> {RadiusDimension, LinearDimension, DiameterDimension, CurveDimension, AngularDimension};
  Curve -> {SurfaceCurve, Pcurve, OffsetCurve3d, OffsetCurve2d, Line, CurveReplica, Conic, BoundedCurve};
  SurfaceCurve -> {SeamCurve, IntersectionCurve, BoundedSurfaceCurve};
  Pcurve -> {BoundedPcurve};
  Conic -> {Parabola, Hyperbola, Ellipse, Circle};
  BoundedCurve -> {TrimmedCurve, Polyline, CompositeCurve, BoundedSurfaceCurve, BoundedPcurve, BSplineCurve};
  CompositeCurve -> {CompositeCurveOnSurface};
  CompositeCurveOnSurface -> {BoundaryCurve};
  BoundaryCurve -> {OuterBoundaryCurve};
  BSplineCurve -> {UniformCurve, RationalBSplineCurve, QuasiUniformCurve, BezierCurve, BSplineCurveWithKnots};
  CompositeText -> {CompositeTextWithExtent, CompositeTextWithBlankingBox, CompositeTextWithAssociatedCurves};
  CameraModel -> {CameraModelD3, CameraModelD2};
  CameraModelD3 -> {CameraModelD3WithHlhsr};
  CompoundRepresentationItem -> {ValueRange, DefaultToleranceTableCell};
  AreaInSet -> {DrawingSheetRevisionUsage};
  DocumentProductAssociation -> {DocumentProductEquivalence};
  TimeIntervalAssignment -> {AppliedTimeIntervalAssignment};
  DraughtingCalloutRelationship -> {DimensionPair, DimensionCalloutRelationship, DimensionCalloutComponentRelationship};
  PresentedItem -> {AppliedPresentedItem};
  CertificationAssignment -> {AppliedCertificationAssignment};
  Effectivity -> {TimeIntervalBasedEffectivity, SerialNumberedEffectivity, ProductDefinitionEffectivity, LotEffectivity, DatedEffectivity};
  ProductDefinitionEffectivity -> {ConfigurationEffectivity};
  DatumReference -> {ReferencedModifiedDatum};
  GeneralProperty -> {GeneralMaterialProperty, ExternallyDefinedGeneralProperty};
  Representation -> {VisualAppearanceRepresentation, UncertaintyAssignedRepresentation, TextStringRepresentation, TactileAppearanceRepresentation, SymbolRepresentation, SurfaceTextureRepresentation, ShapeRepresentation, PresentationRepresentation, MomentsOfInertiaRepresentation, MechanicalDesignGeometricPresentationRepresentation, KinematicLinkRepresentation, KinematicGroundRepresentation, KinematicFrameBackgroundRepresentation, HardnessRepresentation, FoundedKinematicPath, DraughtingModel, DefinitionalRepresentation, DefaultToleranceTable, ContactRatioRepresentation, ConstructiveGeometryRepresentation};
  SymbolRepresentation -> {GenericCharacterGlyphSymbol, DraughtingSymbolRepresentation, DraughtingSubfigureRepresentation};
  GenericCharacterGlyphSymbol -> {CharacterGlyphSymbol};
  DraughtingSymbolRepresentation -> {DrawingSheetLayout};
  ShapeRepresentation -> {ShapeRepresentationWithParameters, ShapeDimensionRepresentation, PointPlacementShapeRepresentation, PlanarShapeRepresentation, PathShapeRepresentation, NonManifoldSurfaceShapeRepresentation, ManifoldSurfaceShapeRepresentation, ManifoldSubsurfaceShapeRepresentation, LocationShapeRepresentation, GeometricallyBoundedWireframeShapeRepresentation, GeometricallyBoundedSurfaceShapeRepresentation, GeometricallyBounded2dWireframeRepresentation, FacetedBrepShapeRepresentation, FaceShapeRepresentation, EdgeBasedWireframeShapeRepresentation, DirectionShapeRepresentation, CurveSweptSolidShapeRepresentation, CsgShapeRepresentation, CompoundShapeRepresentation, AdvancedBrepShapeRepresentation};
  PresentationRepresentation -> {PresentationView, PresentationArea};
  PresentationArea -> {MechanicalDesignGeometricPresentationArea, DrawingSheetRevision};
  ProductConcept -> {ProductClass};
  ShapeAspectRelationship -> {ShapeDefiningRelationship, ShapeAspectTransition, ShapeAspectDerivingRelationship, ShapeAspectAssociativity, FeatureComponentRelationship, DimensionalLocation};
  FeatureComponentRelationship -> {PatternOmitMembership, PatternOffsetMembership};
  DimensionalLocation -> {DirectedDimensionalLocation, DimensionalLocationWithPath, AngularLocation};
  DocumentUsageConstraintAssignment -> {AppliedDocumentUsageConstraintAssignment};
  AttributeValueAssignment -> {MultiLanguageAttributeAssignment};
  PersonAndOrganizationAssignment -> {AppliedPersonAndOrganizationAssignment};
  Document -> {DocumentFile};
  SurfaceStyleReflectanceAmbient -> {SurfaceStyleReflectanceAmbientDiffuse};
  SurfaceStyleReflectanceAmbientDiffuse -> {SurfaceStyleReflectanceAmbientDiffuseSpecular};
  Address -> {PersonalAddress, OrganizationalAddress};
  PersonalAddress -> {PersonAndOrganizationAddress};
  OrganizationalAddress -> {PersonAndOrganizationAddress};
  DateAssignment -> {AppliedDateAssignment};
  VariableSemantics -> {NamedUnitVariable, ExpressionConversionBasedUnit, DerivedUnitVariable};
  ProductDefinitionRelationship -> {ProductDefinitionUsage};
  ProductDefinitionUsage -> {MakeFromUsageOption, AssemblyComponentUsage};
  AssemblyComponentUsage -> {SpecifiedHigherUsageOccurrence, QuantifiedAssemblyComponentUsage, PromissoryUsageOccurrence, NextAssemblyUsageOccurrence};
  GroupAssignment -> {ProductConceptFeatureCategoryUsage, AppliedGroupAssignment};
  MeasureWithUnit -> {VolumeMeasureWithUnit, UncertaintyMeasureWithUnit, TimeMeasureWithUnit, ThermodynamicTemperatureMeasureWithUnit, SolidAngleMeasureWithUnit, RatioMeasureWithUnit, PlaneAngleMeasureWithUnit, MeasureRepresentationItem, MassMeasureWithUnit, LuminousIntensityMeasureWithUnit, LengthMeasureWithUnit, ElectricCurrentMeasureWithUnit, CelsiusTemperatureMeasureWithUnit, AreaMeasureWithUnit, AmountOfSubstanceMeasureWithUnit};
  EffectivityContextAssignment -> {ConfiguredEffectivityContextAssignment, ClassUsageEffectivityContextAssignment};
  UncertaintyQualifier -> {StandardUncertainty, QualitativeUncertainty};
  ProductDefinition -> {ProductDefinitionWithAssociatedDocuments, ProductDefinitionResource};
  ProductDefinitionWithAssociatedDocuments -> {PhysicallyModelledProductDefinition};
  ApplicationContextElement -> {ProductDefinitionContext, ProductContext, ProductConceptContext};
  EffectivityAssignment -> {ConfiguredEffectivityAssignment, AppliedIneffectivityAssignment, AppliedEffectivityAssignment};
  ApprovalAssignment -> {AppliedApprovalAssignment};
  TimeInterval -> {TimeIntervalWithBounds};
  PreDefinedItem -> {PreDefinedTextFont, PreDefinedSymbol, PreDefinedPresentationStyle, PreDefinedMarker, PreDefinedCurveFont, PreDefinedColour, KnownSource};
  PreDefinedTextFont -> {DraughtingPreDefinedTextFont};
  PreDefinedSymbol -> {PreDefinedTerminatorSymbol, PreDefinedSurfaceConditionSymbol, PreDefinedPointMarkerSymbol, PreDefinedGeometricalToleranceSymbol, PreDefinedDimensionSymbol};
  PreDefinedTerminatorSymbol -> {VectorStyle};
  PreDefinedMarker -> {PreDefinedPointMarkerSymbol};
  PreDefinedCurveFont -> {DraughtingPreDefinedCurveFont};
  ActionRequestAssignment -> {AppliedActionRequestAssignment};
  SecurityClassificationAssignment -> {AppliedSecurityClassificationAssignment};
  DimensionalSize -> {ExternallyDefinedDimensionDefinition, DimensionalSizeWithPath, AngularSize};
  ConfigurationItem -> {ProductIdentification, ConfigurableItem};
  ProductIdentification -> {ProductSpecification};
  ConfigurableItem -> {ProductSpecification};
  SurfaceStyleRendering -> {SurfaceStyleRenderingWithProperties};
  FoundedItem -> {ViewVolume, TextStyle, SymbolStyle, SurfaceStyleUsage, SurfaceStyleSilhouette, SurfaceStyleSegmentationCurve, SurfaceStyleParameterLine, SurfaceStyleFillArea, SurfaceStyleControlGrid, SurfaceStyleBoundary, SurfaceSideStyle, SurfacePatch, PresentationStyleAssignment, PreDefinedPresentationStyle, PointStyle, FillAreaStyle, ExternallyDefinedStyle, CurveStyleFontPattern, CurveStyleFont, CurveStyle, CompositeCurveSegment, BoxDomain, ApproximationToleranceParameter, ApproximationToleranceDeviation, ApproximationTolerance};
  TextStyle -> {TextStyleWithSpacing, TextStyleWithMirror, TextStyleWithBoxCharacteristics};
  PresentationStyleAssignment -> {PresentationStyleByContext};
  CurveStyle -> {VectorStyle};
  CompositeCurveSegment -> {ReparametrisedCompositeCurveSegment};
  Group -> {RepItemGroup, ProductConceptFeatureCategory, Language, ClassSystem, Class};
  ProductConceptFeatureCategory -> {ExclusiveProductConceptFeatureCategory};
  Class -> {ExternallyDefinedClass, CharacterizedClass};
  ShapeAspect -> {VeeProfile, TransitionFeature, ToleranceZone, TeeProfile, Taper, SymmetricShapeAspect, SquareUProfile, SlotEnd, RoundedUProfile, RectangularClosedProfile, PocketBottom, PlacedFeature, PathFeatureComponent, PartialCircularProfile, OpenPathProfile, NgonClosedProfile, JoggleTermination, InstancedFeature, HoleBottom, DirectedAngle, DerivedShapeAspect, DatumTarget, DatumFeature, Datum, CompositeShapeAspect, ClosedPathProfile, CircularClosedProfile, ChamferOffset, BossTop, BeadEnd, AppliedArea};
  TransitionFeature -> {Fillet, EdgeRound, Chamfer};
  DerivedShapeAspect -> {Tangent, PerpendicularTo, ParallelOffset, GeometricIntersection, GeometricAlignment, Extension, CentreOfSymmetry, Apex};
  DatumTarget -> {PlacedDatumTargetFeature};
  Datum -> {CommonDatum};
  CompositeShapeAspect -> {CommonDatum};
  AnnotationOccurrenceRelationship -> {AnnotationOccurrenceAssociativity};
  RepresentationRelationship -> {ShapeRepresentationRelationship, RepresentationRelationshipWithTransformation, MotionLinkRelationship, KinematicLinkRepresentationAssociation, ConstructiveGeometryRepresentationRelationship};
  RepresentationRelationshipWithTransformation -> {MechanismBasePlacement, KinematicFrameBackgroundRepresentationAssociation};
  MotionLinkRelationship -> {ResultingPath};
  ExternalSource -> {KnownSource};
  PairValue -> {UniversalPairValue, UnconstrainedPairValue, SphericalPairValue, SlidingSurfacePairValue, SlidingCurvePairValue, ScrewPairValue, RollingSurfacePairValue, RollingCurvePairValue, RevolutePairValue, RackAndPinionPairValue, PrismaticPairValue, PointOnSurfacePairValue, PointOnPlanarCurvePairValue, PlanarPairValue, GearPairValue, CylindricalPairValue};
  NamedUnit -> {TimeUnit, ThermodynamicTemperatureUnit, SolidAngleUnit, SiUnit, RatioUnit, PlaneAngleUnit, NamedUnitVariable, MassUnit, LuminousIntensityUnit, LengthUnit, ElectricCurrentUnit, ConversionBasedUnit, ContextDependentUnit, AmountOfSubstanceUnit};
  ContextDependentUnit -> {ExpressionConversionBasedUnit};
  RepresentationMap -> {SymbolRepresentationMap, CameraUsage};
  EventOccurrence -> {RelativeEventOccurrence};
  ProductConceptFeature -> {PackageProductConceptFeature, ConditionalConceptFeature};
  ConditionalConceptFeature -> {InclusionProductConceptFeature};
  CharacterizedObject -> {ProductIdentification, ProductClass, FeatureDefinition, FeatureComponentDefinition, DocumentFile, CharacterizedClass};
  FeatureDefinition -> {Thread, Slot, RoundHole, Rib, ReplicateFeature, Pocket, Locator, Joggle, InstancedFeature, HoleInPanel, GeneralFeature, FeatureInPanel, ExternallyDefinedFeatureDefinition, CompoundFeature, Boss, Bead, BarringHole};
  ReplicateFeature -> {RectangularPattern, ModifiedPattern, FeaturePattern, CircularPattern};
  CompoundFeature -> {CompositeHole};
}
